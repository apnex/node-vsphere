#----------------- Start of code capture -----------------

// ----------listKmipServers----------
managedObject.listKmipServers(null);   // CryptoManagerKmip-CryptoManager

// ----------queryConfigOptionDescriptor----------
managedObject.queryConfigOptionDescriptor();   // EnvironmentBrowser-envbrowser-13

// ----------queryConfigOption----------
var key = 'vmx-17';
managedObject.queryConfigOption(key, null);   // EnvironmentBrowser-envbrowser-13

// ----------queryConfigOptionEx----------
var spec = new VcEnvironmentBrowserConfigOptionQuerySpec();
var guestId = new Array();
guestId[0] = 'windows8Server64Guest';
spec.guestId = guestId;
spec.key = 'vmx-17';
managedObject.queryConfigOptionEx(spec);   // EnvironmentBrowser-envbrowser-13

// ----------queryConfigTarget----------
managedObject.queryConfigTarget(null);   // EnvironmentBrowser-envbrowser-13

// ----------queryTargetCapabilities----------
managedObject.queryTargetCapabilities(null);   // EnvironmentBrowser-envbrowser-13

// ----------getDatastoreBrowser----------
managedObject.getDatastoreBrowser();   // EnvironmentBrowser-envbrowser-13

// ----------listKmipServers----------
managedObject.listKmipServers(null);   // CryptoManagerKmip-CryptoManager

// ----------listKmipServers----------
managedObject.listKmipServers(null);   // CryptoManagerKmip-CryptoManager

// ----------listKmipServers----------
managedObject.listKmipServers(null);   // CryptoManagerKmip-CryptoManager

// ----------searchDatastore_Task----------
var datastorePath = '[ds-esx03]';
var searchSpec = new VcHostDatastoreBrowserSearchSpec();
var query = new Array();
query[0] = new VcFolderFileQuery();
searchSpec.query = query;
searchSpec.details = new VcFileQueryFlags();
searchSpec.details.fileSize = true;
searchSpec.details.fileOwner = true;
searchSpec.details.modification = true;
searchSpec.details.fileType = true;
searchSpec.searchCaseInsensitive = true;
searchSpec.sortFoldersFirst = true;
managedObject.searchDatastore_Task(datastorePath, searchSpec);   // HostDatastoreBrowser-datastoreBrowser-domain-c13

// ----------searchDatastore_Task----------
var datastorePath = '[ds-esx03] iso';
var searchSpec = new VcHostDatastoreBrowserSearchSpec();
var query = new Array();
query[0] = new VcFloppyImageFileQuery();
query[1] = new VcIsoImageFileQuery();
query[2] = new VcFolderFileQuery();
searchSpec.query = query;
searchSpec.details = new VcFileQueryFlags();
searchSpec.details.fileSize = true;
searchSpec.details.fileOwner = true;
searchSpec.details.modification = true;
searchSpec.details.fileType = true;
searchSpec.searchCaseInsensitive = true;
searchSpec.sortFoldersFirst = true;
managedObject.searchDatastore_Task(datastorePath, searchSpec);   // HostDatastoreBrowser-datastoreBrowser-domain-c13

// ----------searchDatastore_Task----------
var datastorePath = '[ds-esx03] iso';
var searchSpec = new VcHostDatastoreBrowserSearchSpec();
var query = new Array();
query[0] = new VcIsoImageFileQuery();
searchSpec.query = query;
var matchPattern = new Array();
matchPattern[0] = 'centos.iso';
searchSpec.matchPattern = matchPattern;
managedObject.searchDatastore_Task(datastorePath, searchSpec);   // HostDatastoreBrowser-datastoreBrowser-domain-c13

// ----------queryConfigOptionEx----------
var spec = new VcEnvironmentBrowserConfigOptionQuerySpec();
var guestId = new Array();
guestId[0] = 'centos7_64Guest';
spec.guestId = guestId;
spec.key = 'vmx-17';
managedObject.queryConfigOptionEx(spec);   // EnvironmentBrowser-envbrowser-13

// ----------listKmipServers----------
managedObject.listKmipServers(null);   // CryptoManagerKmip-CryptoManager

// ----------searchDatastore_Task----------
var datastorePath = '[ds-esx03]';
var searchSpec = new VcHostDatastoreBrowserSearchSpec();
var query = new Array();
query[0] = new VcFolderFileQuery();
searchSpec.query = query;
searchSpec.details = new VcFileQueryFlags();
searchSpec.details.fileSize = true;
searchSpec.details.fileOwner = true;
searchSpec.details.modification = true;
searchSpec.details.fileType = true;
searchSpec.searchCaseInsensitive = true;
searchSpec.sortFoldersFirst = true;
managedObject.searchDatastore_Task(datastorePath, searchSpec);   // HostDatastoreBrowser-datastoreBrowser-domain-c13

// ----------searchDatastore_Task----------
var datastorePath = '[ds-esx03] iso';
var searchSpec = new VcHostDatastoreBrowserSearchSpec();
var query = new Array();
query[0] = new VcFloppyImageFileQuery();
query[1] = new VcIsoImageFileQuery();
query[2] = new VcFolderFileQuery();
searchSpec.query = query;
searchSpec.details = new VcFileQueryFlags();
searchSpec.details.fileSize = true;
searchSpec.details.fileOwner = true;
searchSpec.details.modification = true;
searchSpec.details.fileType = true;
searchSpec.searchCaseInsensitive = true;
searchSpec.sortFoldersFirst = true;
managedObject.searchDatastore_Task(datastorePath, searchSpec);   // HostDatastoreBrowser-datastoreBrowser-domain-c13

// ----------searchDatastore_Task----------
var datastorePath = '[ds-esx03] iso';
var searchSpec = new VcHostDatastoreBrowserSearchSpec();
var query = new Array();
query[0] = new VcIsoImageFileQuery();
searchSpec.query = query;
var matchPattern = new Array();
matchPattern[0] = 'centos.iso';
searchSpec.matchPattern = matchPattern;
managedObject.searchDatastore_Task(datastorePath, searchSpec);   // HostDatastoreBrowser-datastoreBrowser-domain-c13

// ----------createChildVM_Task----------
var config = new VcVirtualMachineConfigSpec();
config.numCPUs = 2;
config.flags = new VcVirtualMachineFlagInfo();
config.flags.virtualMmuUsage = 'automatic';
config.flags.monitorType = 'release';
config.flags.enableLogging = true;
config.virtualSMCPresent = false;
config.maxMksConnections = 40;
var cpuFeatureMask = new Array();
config.cpuFeatureMask = cpuFeatureMask;
config.tools = new VcToolsConfigInfo();
config.tools.beforeGuestShutdown = true;
config.tools.toolsUpgradePolicy = 'manual';
config.tools.beforeGuestStandby = true;
config.tools.afterResume = true;
config.tools.afterPowerOn = true;
config.version = 'vmx-17';
config.latencySensitivity = new VcLatencySensitivity();
config.latencySensitivity.level = VcLatencySensitivitySensitivityLevel.normal;
config.virtualICH7MPresent = false;
config.memoryMB = 2048;
config.memoryAllocation = new VcResourceAllocationInfo();
config.memoryAllocation.shares = new VcSharesInfo();
config.memoryAllocation.shares.shares = 20480;
config.memoryAllocation.shares.level = VcSharesLevel.normal;
config.memoryAllocation.limit = -1;
config.memoryAllocation.reservation = 0;
config.numCoresPerSocket = 1;
config.bootOptions = new VcVirtualMachineBootOptions();
config.migrateEncryption = 'opportunistic';
config.cpuAllocation = new VcResourceAllocationInfo();
config.cpuAllocation.shares = new VcSharesInfo();
config.cpuAllocation.shares.shares = 2000;
config.cpuAllocation.shares.level = VcSharesLevel.normal;
config.cpuAllocation.limit = -1;
config.cpuAllocation.reservation = 0;
var deviceChange = new Array();
deviceChange[0] = new VcVirtualDeviceConfigSpec();
deviceChange[0].device = new VcVirtualMachineVideoCard();
deviceChange[0].device.numDisplays = 1;
deviceChange[0].device.useAutoDetect = false;
deviceChange[0].device.controllerKey = 100;
deviceChange[0].device.unitNumber = 0;
deviceChange[0].device.use3dRenderer = 'automatic';
deviceChange[0].device.enable3DSupport = false;
deviceChange[0].device.deviceInfo = new VcDescription();
deviceChange[0].device.deviceInfo.summary = 'Video card';
deviceChange[0].device.deviceInfo.label = 'Video card ';
deviceChange[0].device.key = 500;
deviceChange[0].device.videoRamSizeInKB = 8192;
deviceChange[0].operation = VcVirtualDeviceConfigSpecOperation.add;
deviceChange[1] = new VcVirtualDeviceConfigSpec();
deviceChange[1].fileOperation = VcVirtualDeviceConfigSpecFileOperation.create;
deviceChange[1].device = new VcVirtualDisk();
deviceChange[1].device.capacityInBytes = 17179869184;
deviceChange[1].device.storageIOAllocation = new VcStorageIOAllocationInfo();
deviceChange[1].device.storageIOAllocation.shares = new VcSharesInfo();
deviceChange[1].device.storageIOAllocation.shares.shares = 1000;
deviceChange[1].device.storageIOAllocation.shares.level = VcSharesLevel.normal;
deviceChange[1].device.storageIOAllocation.limit = -1;
deviceChange[1].device.backing = new VcVirtualDiskFlatVer2BackingInfo();
deviceChange[1].device.backing.fileName = '[ds-esx03]';
deviceChange[1].device.backing.eagerlyScrub = false;
deviceChange[1].device.backing.thinProvisioned = false;
deviceChange[1].device.backing.diskMode = 'persistent';
deviceChange[1].device.controllerKey = -110;
deviceChange[1].device.unitNumber = 1;
deviceChange[1].device.capacityInKB = 16777216;
deviceChange[1].device.deviceInfo = new VcDescription();
deviceChange[1].device.deviceInfo.summary = 'New Hard disk';
deviceChange[1].device.deviceInfo.label = 'New Hard disk';
deviceChange[1].device.key = -108;
deviceChange[1].operation = VcVirtualDeviceConfigSpecOperation.add;
deviceChange[2] = new VcVirtualDeviceConfigSpec();
deviceChange[2].device = new VcVirtualVmxnet3();
deviceChange[2].device.macAddress = '';
deviceChange[2].device.resourceAllocation = new VcVirtualEthernetCardResourceAllocation();
deviceChange[2].device.resourceAllocation.limit = -1;
deviceChange[2].device.resourceAllocation.reservation = 0;
deviceChange[2].device.resourceAllocation.share = new VcSharesInfo();
deviceChange[2].device.resourceAllocation.share.shares = 50;
deviceChange[2].device.resourceAllocation.share.level = VcSharesLevel.normal;
deviceChange[2].device.connectable = new VcVirtualDeviceConnectInfo();
deviceChange[2].device.connectable.connected = true;
deviceChange[2].device.connectable.allowGuestControl = true;
deviceChange[2].device.connectable.startConnected = true;
deviceChange[2].device.backing = new VcVirtualEthernetCardDistributedVirtualPortBackingInfo();
deviceChange[2].device.backing.port = new VcDistributedVirtualSwitchPortConnection();
deviceChange[2].device.backing.port.switchUuid = '50 20 77 65 a7 f4 c5 50-08 75 a0 b9 79 04 ab d5';
deviceChange[2].device.backing.port.portgroupKey = 'dvportgroup-35';
deviceChange[2].device.addressType = 'generated';
deviceChange[2].device.deviceInfo = new VcDescription();
deviceChange[2].device.deviceInfo.summary = 'New Network';
deviceChange[2].device.deviceInfo.label = 'New Network';
deviceChange[2].device.key = -109;
deviceChange[2].operation = VcVirtualDeviceConfigSpecOperation.add;
deviceChange[3] = new VcVirtualDeviceConfigSpec();
deviceChange[3].device = new VcVirtualAHCIController();
deviceChange[3].device.deviceInfo = new VcDescription();
deviceChange[3].device.deviceInfo.summary = 'New SATA Controller';
deviceChange[3].device.deviceInfo.label = 'New SATA Controller';
deviceChange[3].device.key = -110;
deviceChange[3].device.busNumber = 0;
deviceChange[3].operation = VcVirtualDeviceConfigSpecOperation.add;
deviceChange[4] = new VcVirtualDeviceConfigSpec();
deviceChange[4].device = new VcVirtualCdrom();
deviceChange[4].device.connectable = new VcVirtualDeviceConnectInfo();
deviceChange[4].device.connectable.connected = false;
deviceChange[4].device.connectable.allowGuestControl = true;
deviceChange[4].device.connectable.startConnected = true;
deviceChange[4].device.backing = new VcVirtualCdromIsoBackingInfo();
deviceChange[4].device.backing.fileName = '[ds-esx03] iso/centos.iso';
deviceChange[4].device.controllerKey = -110;
deviceChange[4].device.unitNumber = 0;
deviceChange[4].device.deviceInfo = new VcDescription();
deviceChange[4].device.deviceInfo.summary = 'New CD/DVD Drive';
deviceChange[4].device.deviceInfo.label = 'New CD/DVD Drive';
deviceChange[4].device.key = -111;
deviceChange[4].operation = VcVirtualDeviceConfigSpecOperation.add;
config.deviceChange = deviceChange;
config.memoryReservationLockedToMax = false;
config.name = 'router';
config.files = new VcVirtualMachineFileInfo();
config.files.vmPathName = '[ds-esx03]';
config.cpuAffinity = new VcVirtualMachineAffinityInfo();
var affinitySet = new Array();
config.cpuAffinity.affinitySet = affinitySet;
config.powerOpInfo = new VcVirtualMachineDefaultPowerOpInfo();
config.powerOpInfo.suspendType = 'preset';
config.powerOpInfo.standbyAction = 'checkpoint';
config.powerOpInfo.resetType = 'preset';
config.powerOpInfo.powerOffType = 'preset';
config.swapPlacement = 'inherit';
config.firmware = 'bios';
config.guestId = 'centos7_64Guest';
managedObject.createChildVM_Task(config, null);   // VirtualApp-resgroup-v2044


#----------------- End of code capture -----------------
